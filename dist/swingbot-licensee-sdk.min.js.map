{"version":3,"sources":["webpack://swingbot-licensee-sdk/webpack/universalModuleDefinition","webpack://swingbot-licensee-sdk/webpack/bootstrap","webpack://swingbot-licensee-sdk/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\",\"amd\":\"axios\",\"root\":\"axios\"}","webpack://swingbot-licensee-sdk/./src/index.js","webpack://swingbot-licensee-sdk/./src/upload.js","webpack://swingbot-licensee-sdk/./src/analysis.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getAnalysisById","uploadVideo","axios","apiUrl","handleError","e","Promise","reject","response","message","file","email","processType","licenseeCampaignId","apiKey","filename","headers","then","uploadUrlData","data","msg","catch","err","urlResults","uploadUrl","put","type","url","uploadResult","method","id","analysisResults","Error"],"mappings":"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","file":"swingbot-licensee-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"swingbot-licensee-sdk\", [\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"swingbot-licensee-sdk\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"swingbot-licensee-sdk\"] = factory(root[\"axios\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import uploadVideo from './upload.js';\nimport { getAnalysisById } from './analysis.js';\nexport { getAnalysisById, uploadVideo };\n","//\n// Swingbot SDK\n// Author: John P. Giatropoulos <john@swingbot.com>\n//\nconst axios = require('axios');\nconst apiUrl = 'https://rth7ytu7ak.execute-api.us-east-1.amazonaws.com/dev';\n\nconst handleError = (e) => {\n  if ('response' in e) {\n    return Promise.reject({\n      response: e.response,\n      message: 'Make sure your API key is valid'\n    });\n  }\n  return Promise.reject(e);\n};\n\n//\n// Step 1: Get the signed URL to upload the video\n//\nconst getSignedUrl = (filename, apiKey) => {\n  return axios.get(`${apiUrl}/upload?filename=${filename}`, {\n    headers: { 'Authorization': apiKey }\n  })\n    .then(uploadUrlData => {\n      return (uploadUrlData !== undefined) ?\n        uploadUrlData.data : Promise.reject(uploadUrlData.msg);\n    })\n    .catch(err => handleError(err));\n};\n//\n// Step 2: Upload the video file to S3 bucket\n//\nconst uploadVideoFile = (uploadUrl, file) => {\n  return axios.put(`${uploadUrl}`, file, {\n    headers: { 'Content-Type': file.type }\n  })\n    .then(uploadUrl => uploadUrl)\n    .catch(err => handleError(err));\n};\n\n//\n// Step 3: Submit for processing\n//\nconst processVideoFile = (filename, email, processType, licenseeCampaignId, apiKey) => {\n  const body = { filename, email, processType, licenseeCampaignId };\n\n  return axios({\n    method: 'post',\n    data: body,\n    url: `${apiUrl}/process`,\n    headers: { 'Authorization': apiKey }\n  })\n    .then(uploadUrl => uploadUrl)\n    .catch(err => handleError(err));\n};\n\n/**\n * the main function!\n */\nconst uploadVideo = (file, email, processType, licenseeCampaignId, apiKey) => {\n  return getSignedUrl(file.name, apiKey)\n    .then(urlResults => uploadVideoFile(urlResults.data.url, file))\n    .then(uploadResult => processVideoFile(file.name, email, processType, licenseeCampaignId, apiKey))\n    .catch(err => err);\n};\n\nmodule.exports = uploadVideo;\n","//\n// Swingbot SDK\n// Author: John P. Giatropoulos <john@swingbot.com>\n//\nconst axios = require('axios');\nconst apiUrl = 'https://rth7ytu7ak.execute-api.us-east-1.amazonaws.com/dev';\n\nconst handleError = (e) => {\n  if ('response' in e) {\n    return Promise.reject({\n      response: e.response,\n      message: 'Make sure your API key is valid'\n    });\n  }\n  return Promise.reject(e);\n};\n\n/**\n * getAnalysisById\n * @param {string} id the analysis unique identifier (cid)\n * @param {string} apiKey Your api key\n */\nexport const getAnalysisById = (id, apiKey) => {\n  return axios.get(`${apiUrl}/analysis/${id}`, {\n    headers: { 'Authorization': apiKey }\n  })\n    .then(analysisResults => {\n      return analysisResults !== undefined ?\n        analysisResults : Promise.reject(new Error('Unable to get analysis results'));\n    }).catch(err => handleError(err));\n};\n"],"sourceRoot":""}